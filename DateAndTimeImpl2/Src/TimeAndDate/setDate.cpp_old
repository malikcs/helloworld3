#include "DateAndtimeImpl.hpp"
#include "DateAndtimeImpl.hpp"
#include "ingenico/os.hpp"
#include "ingenico/os.hpp"
#include "ingenico/service.hpp"
#include "ingenico/desktopenv.hpp"
using namespace ingenico::service;
using namespace ingenico::os;
using namespace ingenico::desktopenv;
using namespace ingenico::dateAndTime;

/**
 * Service method (@ref ingenico::service::Permissions::PAYMENT).
 * @param inDate_string Input parameter (message to translate).
 * @return error code SUCCESS, ERR_FAILED or ERR_TIME_OUT */
ingenico::os::Error DateAndtimeImpl::setDate(const std::string& inDate_string) {
	Error result = ERR_FAILED;

	Service client; // Instance to manage a pure client to query the Settings
	ingenico::desktopenv::Settings settings; // Instance to manage the Settings
	// Connect to the buzzer service
	// Default service class name = "local.device.Settings", passing as default argument
	result = client.attachProxy(settings);
	int day, month, year;
	day = atoi(inDate_string.substr(0, 2).c_str());
	month = atoi(inDate_string.substr(2, 2).c_str());
	year = atoi(inDate_string.substr(4, 4).c_str());

	//String dformat;
	result = settings.setDate(year, month, day);
	// Disconnect from the buzzer service
	client.detachProxy(settings);
	return result;
}

