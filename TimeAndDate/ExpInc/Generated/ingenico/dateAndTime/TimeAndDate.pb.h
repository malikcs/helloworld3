// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TimeAndDate.proto

#ifndef PROTOBUF_ingenico_dateAndTime_TimeAndDate_2eproto__INCLUDED
#define PROTOBUF_ingenico_dateAndTime_TimeAndDate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif
#include <memory>

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ingenico {
namespace dateAndTime {

// Internal implementation detail -- do not call these.
void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
void protobuf_AssignDesc_TimeAndDate_2eproto();
void protobuf_ShutdownFile_TimeAndDate_2eproto();

// ####GenerateForwardDeclaration
class GetDateRequest;
class GetDateResponse;
class SetDateResponse;
class SetDateRequest;
class SetTimeResponse;
class SetTimeRequest;
class TestResponse;
class TestRequest;

// ####GenerateEnumDefinitions
// ####GenerateDefinition
// ===================================================================

class __attribute__((visibility("default"))) GetDateRequest : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_GETDATEREQUEST_MESSAGE_TYPE 0xf6d06039a6910c02LL //17784820729210014722
  typedef std::auto_ptr<GetDateRequest> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const GetDateRequest& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static GetDateRequest * newOne();
  static GetDateRequest * newOne(const GetDateRequest& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     GetDateRequest();
     GetDateRequest(const GetDateRequest& from);

  public:
  virtual ~GetDateRequest();

  GetDateRequest& operator=(const GetDateRequest& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDateRequest& default_instance();

  void Swap(GetDateRequest* other);

  // implements Message ----------------------------------------------

  GetDateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDateRequest& from);
  void MergeFrom(const GetDateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.GetDateRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static GetDateRequest* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) GetDateResponse : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_GETDATERESPONSE_MESSAGE_TYPE 0x7e539124ebb18ef3LL //9102778859605036787
  typedef std::auto_ptr<GetDateResponse> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const GetDateResponse& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static GetDateResponse * newOne();
  static GetDateResponse * newOne(const GetDateResponse& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     GetDateResponse();
     GetDateResponse(const GetDateResponse& from);

  public:
  virtual ~GetDateResponse();

  GetDateResponse& operator=(const GetDateResponse& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDateResponse& default_instance();

  void Swap(GetDateResponse* other);

  // implements Message ----------------------------------------------

  GetDateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDateResponse& from);
  void MergeFrom(const GetDateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string resultofgetdate = 1;
  bool has_resultofgetdate() const;
  void clear_resultofgetdate();
  static const int kResultofgetdateFieldNumber;
  const ::std::string& resultofgetdate() const;
  void set_resultofgetdate(const ::std::string& value);
  void set_resultofgetdate(const char* value);
  void set_resultofgetdate(const char* value, size_t size);
  ::std::string* mutable_resultofgetdate();
  ::std::string* release_resultofgetdate();
  void set_allocated_resultofgetdate(::std::string* resultofgetdate);

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.GetDateResponse)
 private:
  void set_has_resultofgetdate();
  void clear_has_resultofgetdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* resultofgetdate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static GetDateResponse* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) SetDateResponse : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_SETDATERESPONSE_MESSAGE_TYPE 0xe5bef946a801a733LL //16554943362122229555
  typedef std::auto_ptr<SetDateResponse> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const SetDateResponse& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static SetDateResponse * newOne();
  static SetDateResponse * newOne(const SetDateResponse& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     SetDateResponse();
     SetDateResponse(const SetDateResponse& from);

  public:
  virtual ~SetDateResponse();

  SetDateResponse& operator=(const SetDateResponse& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDateResponse& default_instance();

  void Swap(SetDateResponse* other);

  // implements Message ----------------------------------------------

  SetDateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetDateResponse& from);
  void MergeFrom(const SetDateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string datechanged = 1;
  bool has_datechanged() const;
  void clear_datechanged();
  static const int kDatechangedFieldNumber;
  const ::std::string& datechanged() const;
  void set_datechanged(const ::std::string& value);
  void set_datechanged(const char* value);
  void set_datechanged(const char* value, size_t size);
  ::std::string* mutable_datechanged();
  ::std::string* release_datechanged();
  void set_allocated_datechanged(::std::string* datechanged);

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.SetDateResponse)
 private:
  void set_has_datechanged();
  void clear_has_datechanged();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* datechanged_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static SetDateResponse* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) SetDateRequest : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_SETDATEREQUEST_MESSAGE_TYPE 0x110dcd9b60770a12LL //1228864340564052498
  typedef std::auto_ptr<SetDateRequest> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const SetDateRequest& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static SetDateRequest * newOne();
  static SetDateRequest * newOne(const SetDateRequest& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     SetDateRequest();
     SetDateRequest(const SetDateRequest& from);

  public:
  virtual ~SetDateRequest();

  SetDateRequest& operator=(const SetDateRequest& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDateRequest& default_instance();

  void Swap(SetDateRequest* other);

  // implements Message ----------------------------------------------

  SetDateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetDateRequest& from);
  void MergeFrom(const SetDateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string datestring = 1;
  bool has_datestring() const;
  void clear_datestring();
  static const int kDatestringFieldNumber;
  const ::std::string& datestring() const;
  void set_datestring(const ::std::string& value);
  void set_datestring(const char* value);
  void set_datestring(const char* value, size_t size);
  ::std::string* mutable_datestring();
  ::std::string* release_datestring();
  void set_allocated_datestring(::std::string* datestring);

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.SetDateRequest)
 private:
  void set_has_datestring();
  void clear_has_datestring();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* datestring_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static SetDateRequest* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) SetTimeResponse : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_SETTIMERESPONSE_MESSAGE_TYPE 0x756199336fe329f3LL //8458210021378042355
  typedef std::auto_ptr<SetTimeResponse> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const SetTimeResponse& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static SetTimeResponse * newOne();
  static SetTimeResponse * newOne(const SetTimeResponse& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     SetTimeResponse();
     SetTimeResponse(const SetTimeResponse& from);

  public:
  virtual ~SetTimeResponse();

  SetTimeResponse& operator=(const SetTimeResponse& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTimeResponse& default_instance();

  void Swap(SetTimeResponse* other);

  // implements Message ----------------------------------------------

  SetTimeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTimeResponse& from);
  void MergeFrom(const SetTimeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string timechanged = 1;
  bool has_timechanged() const;
  void clear_timechanged();
  static const int kTimechangedFieldNumber;
  const ::std::string& timechanged() const;
  void set_timechanged(const ::std::string& value);
  void set_timechanged(const char* value);
  void set_timechanged(const char* value, size_t size);
  ::std::string* mutable_timechanged();
  ::std::string* release_timechanged();
  void set_allocated_timechanged(::std::string* timechanged);

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.SetTimeResponse)
 private:
  void set_has_timechanged();
  void clear_has_timechanged();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* timechanged_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static SetTimeResponse* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) SetTimeRequest : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_SETTIMEREQUEST_MESSAGE_TYPE 0x42914bcfeddd2e12LL //4796698434547297810
  typedef std::auto_ptr<SetTimeRequest> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const SetTimeRequest& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static SetTimeRequest * newOne();
  static SetTimeRequest * newOne(const SetTimeRequest& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     SetTimeRequest();
     SetTimeRequest(const SetTimeRequest& from);

  public:
  virtual ~SetTimeRequest();

  SetTimeRequest& operator=(const SetTimeRequest& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTimeRequest& default_instance();

  void Swap(SetTimeRequest* other);

  // implements Message ----------------------------------------------

  SetTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTimeRequest& from);
  void MergeFrom(const SetTimeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string timestring = 1;
  bool has_timestring() const;
  void clear_timestring();
  static const int kTimestringFieldNumber;
  const ::std::string& timestring() const;
  void set_timestring(const ::std::string& value);
  void set_timestring(const char* value);
  void set_timestring(const char* value, size_t size);
  ::std::string* mutable_timestring();
  ::std::string* release_timestring();
  void set_allocated_timestring(::std::string* timestring);

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.SetTimeRequest)
 private:
  void set_has_timestring();
  void clear_has_timestring();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* timestring_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static SetTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) TestResponse : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_TESTRESPONSE_MESSAGE_TYPE 0x63bb8cdeebffb573LL //7186492519469790579
  typedef std::auto_ptr<TestResponse> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const TestResponse& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static TestResponse * newOne();
  static TestResponse * newOne(const TestResponse& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     TestResponse();
     TestResponse(const TestResponse& from);

  public:
  virtual ~TestResponse();

  TestResponse& operator=(const TestResponse& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestResponse& default_instance();

  void Swap(TestResponse* other);

  // implements Message ----------------------------------------------

  TestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestResponse& from);
  void MergeFrom(const TestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.TestResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static TestResponse* default_instance_;
};
// -------------------------------------------------------------------

// ####GenerateClassDefinition
class __attribute__((visibility("default"))) TestRequest : public ::google::protobuf::Message
{
 public:
  virtual unsigned long long getMessageType() const;
  static unsigned long long getMessageTypeStatic();
  static const unsigned long long messageType;
  #define INGENICO_DATEANDTIME_TESTREQUEST_MESSAGE_TYPE 0x0822380628e92dd2LL //586092500618915282
  typedef std::auto_ptr<TestRequest> Instance;

  // Instantiate with automatic pointer (This solution must be prefered to avoid memory leak)
  static Instance instantiate();
  static Instance instantiate(const TestRequest& from);

  // Create a new object (to avoid memory leaks you must destroy the object with delete)
  static TestRequest * newOne();
  static TestRequest * newOne(const TestRequest& from);

  // IMPORTANT : The constructor is hidden to facilitate the evolution of attributes in future versions.
  // You must use dynamic instantiation with method instantiate.
  private:
     TestRequest();
     TestRequest(const TestRequest& from);

  public:
  virtual ~TestRequest();

  TestRequest& operator=(const TestRequest& from);

  const ::google::protobuf::UnknownFieldSet& unknown_fields() const;
  ::google::protobuf::UnknownFieldSet* mutable_unknown_fields();
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestRequest& default_instance();

  void Swap(TestRequest* other);

  // implements Message ----------------------------------------------

  TestRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestRequest& from);
  void MergeFrom(const TestRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const;
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ingenico.dateAndTime.TestRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void __attribute__((visibility("default"))) protobuf_AddDesc_TimeAndDate_2eproto();
  friend void protobuf_AssignDesc_TimeAndDate_2eproto();
  friend void protobuf_ShutdownFile_TimeAndDate_2eproto();

  void InitAsDefaultInstance();
  static TestRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// ####GenerateDeclaration

// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace dateAndTime
}  // namespace ingenico

#ifndef SWIG
namespace google {
namespace protobuf {

// ####GenerateGetEnumDescriptorSpecializations
// ####GenerateGetEnumDescriptorSpecializations

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ingenico_dateAndTime_TimeAndDate_2eproto__INCLUDED
